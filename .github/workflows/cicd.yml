name: CI/CD Pipeline to GKE

on:
  push:
    branches: ["main", "ci/docker-build"]
  pull_request:
    branches: ["main", "ci/docker-build"]

env:
  PROJECT_ID: 'invertible-lens-459421-f7'
  GKE_CLUSTER: 'cluster-1'
  GKE_ZONE: 'asia-northeast1-c'
  DEPLOYMENT_NAME_BACKEND: 'backend'
  DEPLOYMENT_NAME_NOTIFICATION: 'notification-service'
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  WORKLOAD_IDENTITY_PROVIDER: 'projects/1019423138216/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
  K8S_DIR: 'k8s'

jobs:
  build-and-test:
    name: Build and Test Docker Images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/ci/docker-build'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Build and push Docker images
        run: |
          export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
          cd testing
          docker-compose -f docker-compose.build.yml build
          docker-compose -f docker-compose.build.yml push

  deploy-to-gke:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/ci/docker-build'
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: 'github-actions-sa@invertible-lens-459421-f7.iam.gserviceaccount.com'

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Set up Kustomize
        run: |
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.3/kustomize_v5.4.3_linux_amd64.tar.gz
          chmod u+x ./kustomize

      - name: Deploy to GKE
        run: |
          cd ${{ env.K8S_DIR }}
          ./../kustomize edit set image sagiri2k4/backend=sagiri2k4/backend:${{ github.sha }} sagiri2k4/notification-service=sagiri2k4/notification-service:${{ github.sha }}
          ./../kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME_BACKEND }}
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME_NOTIFICATION }}
          kubectl get services -o wide
